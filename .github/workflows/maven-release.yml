name: Perform Maven release:prepare

on:
  workflow_dispatch:

env:
  # Mysql
  MYSQL_DATABASE: dummy_db_test
  MYSQL_USER: root
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  # Java
  JAVA_VERSION: 19
  # DockerHub
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: hod0r/dummy-api
  # Git
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Sonar
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_KEY: ${{ secrets.SONAR_KEY }}

jobs:
  maven_release:
    name: Perform Maven release:prepare
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    services:
      mysql:
        image: mysql
        ports:
          - '3307:3306'
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: checkout Git repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          maven-args: "clean install -DMYSQL_USER=${{ env.MYSQL_USER }} -DMYSQL_PORT=3307 -DMYSQL_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }}"

      - name: Release:prepare
        uses: qcastel/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-19-openjdk/
        with:
          git-release-bot-name: "bot-idhub"
          git-release-bot-email: "bot@idhub.io"

          maven-args: "-DMYSQL_USER=${{ env.MYSQL_USER }} -DMYSQL_PORT=3307 -DMYSQL_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }}"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.DOCKER_REPOSITORY }}
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}